openapi: 3.0.3
info:
  title: UBeU Credential API
  version: 1.0.0
  description: |
    UBeU Credential Management API for issuing, verifying, and managing W3C Verifiable Credentials.

    ## Credential Types

    ### Open Badges
    - **Standard**: IMS Global Open Badges v3.0
    - **Use Case**: Educational achievements, certifications
    - **Format**: JSON-LD with cryptographic proof

    ### Domain Ownership
    - **Standard**: W3C Verifiable Credentials
    - **Use Case**: Prove domain ownership
    - **Format**: JSON-LD with Ed25519 signature

    ### Custom Credentials
    - **Standard**: W3C Verifiable Credentials
    - **Use Case**: Any verifiable claim
    - **Format**: JSON-LD with configurable proof

  contact:
    name: UBeU Support
    email: support@ubeu.io
  license:
    name: MIT

servers:
  - url: https://api.ubeu.io/v1
    description: Production server
  - url: https://staging-api.ubeu.io/v1
    description: Staging server
  - url: http://localhost:3000/v1
    description: Local development

security:
  - bearerAuth: []

paths:
  /credentials/issue:
    post:
      summary: Issue credential
      description: Issue a new W3C Verifiable Credential
      tags:
        - Credential
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - subjectDid
                - type
                - claims
              properties:
                subjectDid:
                  type: string
                  pattern: '^did:hedera:(mainnet|testnet):0\.0\.\d+$'
                  description: DID of the credential subject
                  example: did:hedera:mainnet:0.0.12345
                type:
                  type: string
                  enum:
                    [
                      DomainOwnership,
                      EmploymentCredential,
                      EducationalCredential,
                      SkillCertification,
                      KYCVerification,
                    ]
                  description: Type of credential to issue
                  example: DomainOwnership
                claims:
                  type: object
                  description: Claims to include in the credential
                  example:
                    domain: john.smith.iam
                    ownershipVerified: true
                    verificationDate: "2025-01-01T00:00:00Z"
                issuerDid:
                  type: string
                  pattern: '^did:hedera:(mainnet|testnet):0\.0\.\d+$'
                  description: DID of the credential issuer (optional, defaults to user's DID)
                  example: did:hedera:mainnet:0.0.67890
                expirationDate:
                  type: string
                  format: date-time
                  description: Credential expiration date
                  example: "2026-01-01T00:00:00Z"
                evidence:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        description: Evidence identifier
                        example: https://example.com/evidence/domain-verification
                      narrative:
                        type: string
                        description: Human-readable evidence description
                        example: Domain ownership verified through DNS records
                      name:
                        type: string
                        description: Evidence name
                        example: Domain Verification Certificate
                  description: Supporting evidence for the credential
      responses:
        "201":
          description: Credential issued successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      credentialId:
                        type: string
                        description: Unique credential identifier
                        example: urn:uuid:cred-12345
                      transactionId:
                        type: string
                        description: Hedera transaction ID
                        example: "0.0.12345@1234567890.000000000"
                      status:
                        type: string
                        enum: [issued, pending, failed]
                        example: issued
                      cost:
                        type: integer
                        description: Cost in USD cents
                        example: 500
        "400":
          description: Invalid credential data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "402":
          description: Insufficient allowance or subscription required
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Not authorized to issue credentials for this subject
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /credentials/{credentialId}:
    get:
      summary: Get credential
      description: Retrieve a credential by its ID
      tags:
        - Credential
      parameters:
        - name: credentialId
          in: path
          required: true
          schema:
            type: string
          description: Credential identifier (URN UUID format)
          example: urn:uuid:cred-12345
      responses:
        "200":
          description: Credential retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: "#/components/schemas/VerifiableCredential"
        "404":
          description: Credential not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      summary: Revoke credential
      description: Revoke a previously issued credential
      tags:
        - Credential
      parameters:
        - name: credentialId
          in: path
          required: true
          schema:
            type: string
          description: Credential identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - reason
              properties:
                reason:
                  type: string
                  description: Reason for revocation
                  example: Credential no longer valid
                revokedBy:
                  type: string
                  pattern: '^did:hedera:(mainnet|testnet):0\.0\.\d+$'
                  description: DID of the revoking entity
                  example: did:hedera:mainnet:0.0.67890
      responses:
        "200":
          description: Credential revoked successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      credentialId:
                        type: string
                        example: urn:uuid:cred-12345
                      status:
                        type: string
                        example: revoked
                      revokedAt:
                        type: string
                        format: date-time
                      revocationReason:
                        type: string
                        example: Credential no longer valid
        "403":
          description: Not authorized to revoke this credential
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Credential not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /credentials/verify:
    post:
      summary: Verify credential
      description: Verify the authenticity and validity of a credential
      tags:
        - Credential
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - credential
              properties:
                credential:
                  $ref: "#/components/schemas/VerifiableCredential"
                verificationMethod:
                  type: string
                  enum: [proof, issuer, all]
                  default: all
                  description: Verification method to use
      responses:
        "200":
          description: Credential verification completed
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      verified:
                        type: boolean
                        example: true
                      issuer:
                        type: string
                        description: Verified issuer DID
                        example: did:hedera:mainnet:0.0.67890
                      subject:
                        type: string
                        description: Verified subject DID
                        example: did:hedera:mainnet:0.0.12345
                      expirationDate:
                        type: string
                        format: date-time
                        description: Credential expiration date
                      status:
                        type: string
                        enum: [valid, expired, revoked, invalid]
                        example: valid
                      checks:
                        type: object
                        properties:
                          signature:
                            type: boolean
                            example: true
                          expiration:
                            type: boolean
                            example: true
                          revocation:
                            type: boolean
                            example: false
                          issuer:
                            type: boolean
                            example: true
                        description: Individual verification check results
        "400":
          description: Invalid credential format
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /credentials/search:
    get:
      summary: Search credentials
      description: Search for credentials by various criteria
      tags:
        - Credential
      parameters:
        - name: subjectDid
          in: query
          schema:
            type: string
            pattern: '^did:hedera:(mainnet|testnet):0\.0\.\d+$'
          description: Filter by subject DID
        - name: issuerDid
          in: query
          schema:
            type: string
            pattern: '^did:hedera:(mainnet|testnet):0\.0\.\d+$'
          description: Filter by issuer DID
        - name: type
          in: query
          schema:
            type: string
            enum:
              [
                DomainOwnership,
                EmploymentCredential,
                EducationalCredential,
                SkillCertification,
                KYCVerification,
              ]
          description: Filter by credential type
        - name: status
          in: query
          schema:
            type: string
            enum: [issued, revoked, expired, all]
            default: all
          description: Filter by credential status
        - name: issuedAfter
          in: query
          schema:
            type: string
            format: date-time
          description: Filter credentials issued after this date
        - name: issuedBefore
          in: query
          schema:
            type: string
            format: date-time
          description: Filter credentials issued before this date
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          description: Maximum number of results
        - name: offset
          in: query
          schema:
            type: integer
            minimum: 0
            default: 0
          description: Number of results to skip
      responses:
        "200":
          description: Credential search results
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/CredentialSummary"
                  pagination:
                    type: object
                    properties:
                      total:
                        type: integer
                        example: 150
                      limit:
                        type: integer
                        example: 20
                      offset:
                        type: integer
                        example: 0
                      hasMore:
                        type: boolean
                        example: true
        "400":
          description: Invalid search parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /credentials/batch:
    post:
      summary: Batch issue credentials
      description: Issue multiple credentials in a single request
      tags:
        - Credential
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - credentials
              properties:
                credentials:
                  type: array
                  items:
                    type: object
                    required:
                      - subjectDid
                      - type
                      - claims
                    properties:
                      subjectDid:
                        type: string
                        pattern: '^did:hedera:(mainnet|testnet):0\.0\.\d+$'
                      type:
                        type: string
                        enum:
                          [
                            DomainOwnership,
                            EmploymentCredential,
                            EducationalCredential,
                            SkillCertification,
                            KYCVerification,
                          ]
                      claims:
                        type: object
                      issuerDid:
                        type: string
                        pattern: '^did:hedera:(mainnet|testnet):0\.0\.\d+$'
                      expirationDate:
                        type: string
                        format: date-time
                      evidence:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                            narrative:
                              type: string
                            name:
                              type: string
                  minItems: 1
                  maxItems: 100
                  description: Array of credentials to issue
                options:
                  type: object
                  properties:
                    continueOnError:
                      type: boolean
                      default: false
                      description: Continue processing if individual credential fails
                    priority:
                      type: string
                      enum: [low, normal, high]
                      default: normal
                      description: Processing priority
      responses:
        "200":
          description: Batch credential issuance completed
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      processed:
                        type: integer
                        description: Number of credentials processed
                        example: 95
                      issued:
                        type: integer
                        description: Number of credentials successfully issued
                        example: 90
                      failed:
                        type: integer
                        description: Number of credentials that failed
                        example: 5
                      totalCost:
                        type: integer
                        description: Total cost in USD cents
                        example: 4500
                      results:
                        type: array
                        items:
                          type: object
                          properties:
                            index:
                              type: integer
                              description: Index in the original array
                              example: 0
                            credentialId:
                              type: string
                              description: Issued credential ID
                              example: urn:uuid:cred-12345
                            status:
                              type: string
                              enum: [issued, failed]
                              example: issued
                            error:
                              type: string
                              description: Error message if failed
                      errors:
                        type: array
                        items:
                          type: object
                          properties:
                            index:
                              type: integer
                              example: 3
                            error:
                              type: string
                              example: Invalid subject DID
        "400":
          description: Invalid batch request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "402":
          description: Insufficient allowance for batch operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /badges/issue:
    post:
      summary: Issue Open Badge
      description: Issue an IMS Global Open Badge credential
      tags:
        - OpenBadge
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - recipientDid
                - achievement
              properties:
                recipientDid:
                  type: string
                  pattern: '^did:hedera:(mainnet|testnet):0\.0\.\d+$'
                  description: DID of the badge recipient
                  example: did:hedera:mainnet:0.0.12345
                achievement:
                  type: object
                  required:
                    - id
                    - type
                    - name
                    - description
                    - criteria
                  properties:
                    id:
                      type: string
                      description: Unique achievement identifier
                      example: urn:uuid:achievement-12345
                    type:
                      type: string
                      enum: [Achievement]
                      example: Achievement
                    name:
                      type: string
                      description: Achievement name
                      example: Course Completion Certificate
                    description:
                      type: string
                      description: Achievement description
                      example: Successfully completed the Advanced Web3 Development course
                    criteria:
                      type: object
                      properties:
                        narrative:
                          type: string
                          description: Achievement criteria description
                          example: Completed all course modules and assessments with 85% or higher
                    image:
                      type: string
                      format: uri
                      description: Achievement image URL
                      example: https://example.com/badge-image.png
                    tags:
                      type: array
                      items:
                        type: string
                      description: Achievement tags
                      example: ["education", "web3", "development"]
                issuerDid:
                  type: string
                  pattern: '^did:hedera:(mainnet|testnet):0\.0\.\d+$'
                  description: DID of the badge issuer
                  example: did:hedera:mainnet:0.0.67890
                expirationDate:
                  type: string
                  format: date-time
                  description: Badge expiration date
                  example: "2026-01-01T00:00:00Z"
                evidence:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        description: Evidence identifier
                        example: https://lms.example.com/certificates/12345
                      narrative:
                        type: string
                        description: Evidence description
                        example: Certificate of completion issued by LMS
                      name:
                        type: string
                        description: Evidence name
                        example: Course Certificate
      responses:
        "201":
          description: Open Badge issued successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      badgeId:
                        type: string
                        description: Badge identifier
                        example: urn:uuid:badge-12345
                      transactionId:
                        type: string
                        description: Hedera transaction ID
                        example: "0.0.12345@1234567890.000000000"
                      status:
                        type: string
                        enum: [issued, pending, failed]
                        example: issued
        "400":
          description: Invalid badge data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /badges/{badgeId}:
    get:
      summary: Get Open Badge
      description: Retrieve an Open Badge by its ID
      tags:
        - OpenBadge
      parameters:
        - name: badgeId
          in: path
          required: true
          schema:
            type: string
          description: Badge identifier
          example: urn:uuid:badge-12345
      responses:
        "200":
          description: Open Badge retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: "#/components/schemas/OpenBadgeCredential"
        "404":
          description: Badge not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /badges/{badgeId}/verify:
    get:
      summary: Verify Open Badge
      description: Verify the authenticity of an Open Badge
      tags:
        - OpenBadge
      parameters:
        - name: badgeId
          in: path
          required: true
          schema:
            type: string
          description: Badge identifier
          example: urn:uuid:badge-12345
      responses:
        "200":
          description: Badge verification completed
          content:
            application/json:
              schema:
                type: object
                properties:
                  verified:
                    type: boolean
                    example: true
                  badgeId:
                    type: string
                    example: urn:uuid:badge-12345
                  verificationDate:
                    type: string
                    format: date-time
                  issuer:
                    type: string
                    example: did:hedera:mainnet:0.0.67890
                  recipient:
                    type: string
                    example: did:hedera:mainnet:0.0.12345
        "404":
          description: Badge not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /badges/templates/educational:
    get:
      summary: Get educational badge templates
      description: Retrieve predefined templates for educational achievements
      tags:
        - OpenBadge
      responses:
        "200":
          description: Badge templates retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: course-completion
                        name:
                          type: string
                          example: Course Completion
                        description:
                          type: string
                          example: Awarded for successfully completing a course
                        achievement:
                          type: object
                          properties:
                            name:
                              type: string
                              example: Course Completion Certificate
                            description:
                              type: string
                              example: Successfully completed the course with required competencies
                            criteria:
                              type: object
                              properties:
                                narrative:
                                  type: string
                                  example: Completed all course modules and assessments
                            tags:
                              type: array
                              items:
                                type: string
                              example: ["education", "course", "completion"]

components:
  schemas:
    Error:
      type: object
      properties:
        success:
          type: boolean
          example: false
        error:
          type: string
          example: INVALID_CREDENTIAL_DATA
        message:
          type: string
          example: Invalid credential claims
        details:
          type: object
        requestId:
          type: string
          format: uuid
      required:
        - success
        - error
        - message

    VerifiableCredential:
      type: object
      properties:
        "@context":
          type: array
          items:
            type: string
          example:
            [
              "https://www.w3.org/2018/credentials/v1",
              "https://purl.imsglobal.org/spec/ob/v3p0/context-3.0.2.json",
            ]
        type:
          type: array
          items:
            type: string
          example: ["VerifiableCredential", "DomainOwnership"]
        id:
          type: string
          example: urn:uuid:cred-12345
        issuer:
          type: object
          properties:
            id:
              type: string
              example: did:hedera:mainnet:0.0.67890
            name:
              type: string
              example: UBeU Issuer
          required:
            - id
        issuanceDate:
          type: string
          format: date-time
          example: "2025-01-01T00:00:00Z"
        expirationDate:
          type: string
          format: date-time
          example: "2026-01-01T00:00:00Z"
        credentialSubject:
          type: object
          properties:
            id:
              type: string
              example: did:hedera:mainnet:0.0.12345
            type:
              type: string
              example: AchievementSubject
            achievement:
              type: object
              description: Achievement details
            identifier:
              type: string
              description: Subject identifier
          required:
            - id
        evidence:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              narrative:
                type: string
              name:
                type: string
        proof:
          type: object
          properties:
            type:
              type: string
              example: Ed25519Signature2020
            created:
              type: string
              format: date-time
            verificationMethod:
              type: string
              example: did:hedera:mainnet:0.0.67890#key-1
            proofValue:
              type: string
              example: z...
      required:
        - "@context"
        - type
        - id
        - issuer
        - issuanceDate
        - credentialSubject

    OpenBadgeCredential:
      type: object
      properties:
        "@context":
          type: array
          items:
            type: string
          example:
            [
              "https://www.w3.org/2018/credentials/v1",
              "https://purl.imsglobal.org/spec/ob/v3p0/context-3.0.2.json",
            ]
        type:
          type: array
          items:
            type: string
          example: ["VerifiableCredential", "OpenBadgeCredential"]
        id:
          type: string
          example: urn:uuid:badge-12345
        issuer:
          type: object
          properties:
            id:
              type: string
              example: did:hedera:mainnet:0.0.67890
            type:
              type: string
              example: Profile
            name:
              type: string
              example: UBeU University
          required:
            - id
            - type
        issuanceDate:
          type: string
          format: date-time
          example: "2025-01-01T00:00:00Z"
        expirationDate:
          type: string
          format: date-time
          example: "2026-01-01T00:00:00Z"
        credentialSubject:
          type: object
          properties:
            type:
              type: string
              example: AchievementSubject
            achievement:
              type: object
              properties:
                id:
                  type: string
                  example: urn:uuid:achievement-12345
                type:
                  type: string
                  example: Achievement
                name:
                  type: string
                  example: Course Completion Certificate
                description:
                  type: string
                  example: Successfully completed the Advanced Web3 Development course
                criteria:
                  type: object
                  properties:
                    narrative:
                      type: string
                      example: Completed all course modules and assessments with 85% or higher
                image:
                  type: string
                  format: uri
                  example: https://example.com/badge-image.png
                tags:
                  type: array
                  items:
                    type: string
                  example: ["education", "web3", "development"]
              required:
                - id
                - type
                - name
                - description
                - criteria
          required:
            - type
            - achievement
        evidence:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                example: https://lms.example.com/certificates/12345
              narrative:
                type: string
                example: Certificate of completion issued by LMS
              name:
                type: string
                example: Course Certificate
        proof:
          type: object
          properties:
            type:
              type: string
              example: Ed25519Signature2020
            created:
              type: string
              format: date-time
            verificationMethod:
              type: string
              example: did:hedera:mainnet:0.0.67890#key-1
            proofValue:
              type: string
              example: z...
      required:
        - "@context"
        - type
        - id
        - issuer
        - issuanceDate
        - credentialSubject

    CredentialSummary:
      type: object
      properties:
        id:
          type: string
          example: urn:uuid:cred-12345
        type:
          type: string
          example: DomainOwnership
        subjectDid:
          type: string
          example: did:hedera:mainnet:0.0.12345
        issuerDid:
          type: string
          example: did:hedera:mainnet:0.0.67890
        status:
          type: string
          enum: [issued, revoked, expired]
          example: issued
        issuedAt:
          type: string
          format: date-time
        expiresAt:
          type: string
          format: date-time
      required:
        - id
        - type
        - subjectDid
        - issuerDid
        - status
        - issuedAt

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

tags:
  - name: Credential
    description: W3C Verifiable Credential operations
  - name: OpenBadge
    description: IMS Global Open Badge operations
